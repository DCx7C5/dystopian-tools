name: Create Release Based on Tags

on:
  push:
    tags:
      - 'v*'   # triggers on v1.2.3, v1.2.3-alpha, etc.

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive release metadata (version and prerelease flag)
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          ver="${GITHUB_REF_NAME#v}" 
          prerelease=false
          if printf '%s' "$ver" | grep -Eiq -- '(-?(alpha|beta|rc)[0-9]*$)|([0-9](a|b|rc)[0-9]*$)'; then
            prerelease=true
          fi
          echo "ver=$ver" >> "$GITHUB_OUTPUT"
          echo "prerelease=$prerelease" >> "$GITHUB_OUTPUT"

      - name: Build source tarball
        shell: bash
        run: |
          set -euo pipefail
          ver="${{ steps.meta.outputs.ver }}"
          repo="${GITHUB_REPOSITORY##*/}"
          git archive --format=tar --prefix="${repo}/" "v${ver}" | gzip -n > "${repo}-${ver}.tar.gz"
          sha256sum "${repo}-${ver}.tar.gz" > "${repo}-${ver}.tar.gz.sha256"

      - name: Sign release assets
        shell: bash
        run: |
          set -euo pipefail
          tmpdir=$(mktemp -d /tmp/XXXXXXX)
          touch "$tmpdir/pubring.kbx"
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | \
          openssl aes-256-cbc -a -d -pbkdf2 -pass "pass:${{ secrets.GPG_PASSPHRASE }}" | \
          gpg --no-tty --batch --homedir "$tmpdir" --import
          repo="${GITHUB_REPOSITORY##*/}"
          ver="${{ steps.meta.outputs.ver }}"
          gpgid="${{ vars.GPG_PRIVATE_KEY_ID }}"
          gpg --batch --no-tty --homedir "$tmpdir" --yes --detach-sign -u "$gpgid" -o "${repo}-${ver}.tar.gz.sig" "${repo}-${ver}.tar.gz" 
          gpg --batch --no-tty --homedir "$tmpdir" --yes --detach-sign -u "$gpgid" -o "{repo}-${ver}.tar.gz.sha256.sig"  "${repo}-${ver}.tar.gz.sha256"
          files=$(find "$tmpdir" -type f 2>/dev/null)
          for file in $files; do
            shred -n 25 "$file"
          done

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.meta.outputs.prerelease }}
          files: |
            *.tar.gz
            *.sha256
            *.asc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}